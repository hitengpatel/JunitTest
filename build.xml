<project name="JunitTest"  basedir=".">
	<description>
        simple example build file
    </description>
	<!-- set global properties for this build -->
	<property name="ws.home" value="${basedir}"/>
	<property name="ws.jars" value="G:\Selenium Project\apache-ant-1.9.4-bin\apache-ant-1.9.4\lib"/>
	<property name="test.dest"  value="${ws.home}/build"/>
	<property name="test.src"  value="${ws.home}/src"/>
	<property name="test.reportDir"  value="G:\Selenium Project\Reports"/>

	<path id= "testcase.path">
		<pathelement location ="${test.dest}"/>
		<fileset dir ="${ws.jars}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="setClassPath" unless="test.classpath">
		<path id = "classpath_jars">
			<fileset dir = "${ws.jars}" includes = "*.jar"/>
		</path>
		<pathconvert pathsep=":"
  		property ="test.classpath"
  		refid = "classpath_jars"/>
	</target>


	<target name="init" depends ="setClassPath">
		<!-- Create the time stamp -->
		<tstamp>
			<format property = "start.time" pattern = "MM/dd/yyyy hh:mm aa"/>
		</tstamp>
		<condition property = "ANT"
    	value = "${ant.home}/bin/ant.bat"
    	else = "${ant.home}/bin/ant">
			<os family = "windows" />
		</condition>
		<!-- Create the build directory structure used by compile -->

	</target>



	<target name="compile" depends="init, clean"
        description="compile the source " >
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="{test.dest}" includes="**/*"/>
		</delete>
		<!-- Compile the java code from ${src} into ${build} -->
		<echo message = "Start Compile...."/>
		<mkdir dir="${test.dest}"/>
		<echo message = "Junit ----:${ws.jars}"/>
		<echo message = "BaseDir---:${basedir}"/>
		<echo message = "Classpath ----:${test.classpath}"/>
		<javac debug="true"
        	destdir="${test.dest}"
        	srcdir="${test.src}"
			target = "1.7"
			includeantruntime="false"	
			classpath="${test.classpath}"
     >
		</javac>

	</target>

	<target name="dist" depends="compile"
        description="generate the distribution" >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib"/>

		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
	</target>

	<target name="run">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${test.reportDir}" includes="**/*" />
		</delete>
		<java jar="${ws.jars}" fork="true" spawn="true"/>
		<junit fork="yes" haltonerror="no" printsummary="yes" showoutput="yes">
			<classpath refid="testcase.path" />
			<batchtest todir="${test.reportDir}" fork="true">
				<fileset dir="${test.dest}" >
					<include name="**/TestSuite.class"  />
				</fileset>
			</batchtest>
			<formatter type="xml" />
			<formatter type="plain" />
		</junit>
		<junitreport todir="${test.reportDir}">
						  <fileset dir="${test.reportDir}">
						    <include name="TEST-*.xml"/>
						  </fileset>
						  <report format="frames" todir="${test.reportDir}/html"/>
						</junitreport>
	</target>

	
	<target name="clean"
        description="clean up" >
		<!-- Delete the ${test.dest} directory trees -->
		<delete dir="${test.dest}"/>
	</target>
</project>